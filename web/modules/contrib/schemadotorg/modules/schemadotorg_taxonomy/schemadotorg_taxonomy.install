<?php

/**
 * @file
 * Installation hooks for the Schema.org Blueprints Taxonomy module.
 */

declare(strict_types=1);

/**
 * Implements hook_modules_installed().
 */
function schemadotorg_taxonomy_modules_installed(array $modules): void {
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  // Enable the term and vocabulary JSON-LD endpoints.
  if (in_array('schemadotorg_jsonld_endpoint', $modules)) {
    schemadotorg_taxonomy_install(FALSE);
  }
}

/**
 * Implements hook_install().
 */
function schemadotorg_taxonomy_install(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  // Enable the term and vocabulary JSON-LD endpoints.
  if (\Drupal::moduleHandler()->moduleExists('schemadotorg_jsonld_endpoint')) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    $endpoints += [
      'taxonomy_term' => 'term',
      'taxonomy_vocabulary' => 'vocabulary',
    ];
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();

    \Drupal::service('router.builder')->rebuild();
  }
}

/**
 * Implements hook_uninstall().
 */
function schemadotorg_taxonomy_uninstall(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  // Disable/remove the term and vocabulary JSON-LD endpoints.
  if (\Drupal::moduleHandler()->moduleExists('schemadotorg_jsonld_endpoint')) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    unset(
      $endpoints['taxonomy_term'],
      $endpoints['taxonomy_vocabulary']
    );
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();

    \Drupal::service('router.builder')->rebuild();
  }
}

/**
 * Issue #3453919: Improve schemadotorg_taxonomy.module default vocabularies.
 */
function schemadotorg_taxonomy_update_10000(): void {
  $config = \Drupal::configFactory()->getEditable('schemadotorg_taxonomy.settings');
  $default_vocabularies = $config->get('default_vocabularies');
  $updated_vocabularies = [];
  foreach ($default_vocabularies as $vocabulary_id => $vocabulary_settings) {
    $schema_type = NULL;
    if (str_contains($vocabulary_id, '--')) {
      [$schema_type, $vocabulary_id] = explode('--', $vocabulary_id);
    }

    if (!isset($updated_vocabularies[$vocabulary_id])) {
      $updated_vocabularies[$vocabulary_id] = $vocabulary_settings;
    }
    if ($schema_type) {
      $updated_vocabularies[$vocabulary_id] += ['schema_types' => []];
      $updated_vocabularies[$vocabulary_id]['schema_types'][] = $schema_type;
    }
  }
  $config->set('default_vocabularies', $updated_vocabularies);
  $config->save();
}

/**
 * TBD.
 */
function schemadotorg_taxonomy_update_10001(): void {
  \Drupal::configFactory()
    ->getEditable('schemadotorg_taxonomy.settings')
    ->clear('default_field_groups:')
    ->save();
}
