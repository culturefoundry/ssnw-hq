<?php

/**
 * @file
 * Allows Inline Entity Forms to be used to create Schema.org relationships.
 */

declare(strict_types=1);

use Drupal\Core\Config\Entity\ConfigEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function schemadotorg_inline_entity_form_entity_insert(EntityInterface $entity): void {
  if (!$entity instanceof ConfigEntityInterface
    || !$entity->getEntityType() instanceof EntityTypeInterface
    || empty($entity->getEntityType()->getBundleOf())) {
    return;
  }

  /** @var \Drupal\schemadotorg_inline_entity_form\SchemaDotOrgInlineEntityFormManagerInterface $schema_inline_entity_form_manager */
  $schema_inline_entity_form_manager = \Drupal::service('schemadotorg_inline_entity_form.manager');
  $schema_inline_entity_form_manager->entityInsert($entity);
}

/**
 * Implements hook_schemadotorg_property_field_alter().
 */
function schemadotorg_inline_entity_form_schemadotorg_property_field_alter(
  string $schema_type,
  string $schema_property,
  array &$field_storage_values,
  array &$field_values,
  ?string &$widget_id,
  array &$widget_settings,
  ?string &$formatter_id,
  array &$formatter_settings,
): void {
  /** @var \Drupal\schemadotorg_inline_entity_form\SchemaDotOrgInlineEntityFormManagerInterface $schema_inline_entity_form_manager */
  $schema_inline_entity_form_manager = \Drupal::service('schemadotorg_inline_entity_form.manager');
  $schema_inline_entity_form_manager->propertyFieldAlter(
    $schema_type,
    $schema_property,
    $field_storage_values,
    $field_values,
    $widget_id,
    $widget_settings,
    $formatter_id,
    $formatter_settings
  );
}

/* ************************************************************************** */
// Schema.org properties settings form.
/* ************************************************************************** */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see \Drupal\schemadotorg\Form\SchemaDotOrgSettingsFormBase::afterBuildDetails
 * @see \Drupal\schemadotorg\Form\SchemaDotOrgSettingsFormBase::formAlter
 */
function schemadotorg_inline_entity_form_form_schemadotorg_properties_settings_form_alter(array &$form, FormStateInterface $form_state): void {
  $form['schemadotorg_inline_entity_form'] = [
    '#type' => 'details',
    '#title' => t('Inline entity form settings'),
  ];
  $form['schemadotorg_inline_entity_form']['default_schema_properties'] = [
    '#type' => 'schemadotorg_settings',
    '#title' => t('Default inline entity form Schema.org properties'),
    '#description' => t('Enter Schema.org properties that should use the inline entity form.'),
    '#description_link' => 'properties',
    '#example' => '
- propertyName
- SchemaType--propertyName
- entity_type_id--propertyName
- entity_type_id--SchemaType--propertyName
',
  ];
  $form['schemadotorg_inline_entity_form']['default_type_form_displays'] = [
    '#type' => 'schemadotorg_settings',
    '#title' => t('Default type form displays'),
    '#description' => t('Enter types that should have the inline entity form display enabled by default.'),
    '#description_link' => 'types',
    '#example' => '
- SchemaType
- bundle
- SchemaType--bundle
- entity_type_id--SchemaType
- entity_type_id--SchemaType--bundle
- entity_type_id--bundle
',
  ];
  $form['schemadotorg_inline_entity_form']['default_form_display_components'] = [
    '#type' => 'schemadotorg_settings',
    '#title' => t('Default form display components'),
    '#description' => t('Enter component field and property names that should be included in the default inline entity form display.'),
    '#example' => '
- field_name
- propertyName
- field_name
- propertyName
',
  ];
}
